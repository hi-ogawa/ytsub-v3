diff --git a/dist/compiler/compileBrowser.js b/dist/compiler/compileBrowser.js
index 97d71b6ecc8b641e9408301eedf372e5e2e62e1d..e0c3a8779771001002a6a886a4be6ff4176c5bfe 100644
--- a/dist/compiler/compileBrowser.js
+++ b/dist/compiler/compileBrowser.js
@@ -110,7 +110,7 @@ const createEsbuildConfig = (build, config, options, onLoader) => {
     mode
   } = options;
   let outputCss = isCssBuild;
-  let plugins = [deprecatedRemixPackagePlugin.deprecatedRemixPackagePlugin(options.onWarning), isCssBundlingEnabled(config) && isCssBuild ? cssBundleEntryModulePlugin.cssBundleEntryModulePlugin(config) : null, config.future.unstable_cssModules ? cssModulesPlugin.cssModulesPlugin({
+  let plugins = [...(globalThis.__esbuildPluginsCommon ?? []), ...(globalThis.__esbuildPluginsBrowser ?? []), deprecatedRemixPackagePlugin.deprecatedRemixPackagePlugin(options.onWarning), isCssBundlingEnabled(config) && isCssBuild ? cssBundleEntryModulePlugin.cssBundleEntryModulePlugin(config) : null, config.future.unstable_cssModules ? cssModulesPlugin.cssModulesPlugin({
     config,
     mode,
     outputCss
diff --git a/dist/compiler/compilerServer.js b/dist/compiler/compilerServer.js
index e478a879768cd6d54b9f42676715db034996f4bc..178bc4b387e3a2dc0458052a20b016911024f1e9 100644
--- a/dist/compiler/compilerServer.js
+++ b/dist/compiler/compilerServer.js
@@ -69,7 +69,7 @@ const createEsbuildConfig = (config, assetsManifestChannel, options) => {
     mode
   } = options;
   let outputCss = false;
-  let plugins = [deprecatedRemixPackagePlugin.deprecatedRemixPackagePlugin(options.onWarning), config.future.unstable_cssModules ? cssModulesPlugin.cssModulesPlugin({
+  let plugins = [...(globalThis.__esbuildPluginsCommon ?? []), ...(globalThis.__esbuildPluginsServer ?? []), deprecatedRemixPackagePlugin.deprecatedRemixPackagePlugin(options.onWarning), config.future.unstable_cssModules ? cssModulesPlugin.cssModulesPlugin({
     config,
     mode,
     outputCss
diff --git a/dist/compiler/plugins/browserRouteModulesPlugin.js b/dist/compiler/plugins/browserRouteModulesPlugin.js
index dc3f4123e715338a0ac2893725a8eb58f44b7578..b9339ee7ed04ed6bdf040f2dbcc81d032aba6f86 100644
--- a/dist/compiler/plugins/browserRouteModulesPlugin.js
+++ b/dist/compiler/plugins/browserRouteModulesPlugin.js
@@ -46,6 +46,22 @@ function browserRouteModulesPlugin(config, suffixMatcher) {
           namespace: "browser-route-module"
         };
       });
+      build.onLoad({
+        // match only route file import
+        namespace: "file",
+        filter: new RegExp(Object.values(config.routes).map(({ file }) => `${config.appDirectory}/${file}`.replace(/[.*+?^${}()|[\]\\]/g, '\\$&')).join("|"))
+      }, async args => {
+        var fs = require('node:fs');
+        var path = require('node:path');
+        var loaders = require('../loaders.js');
+        let contents = await fs.promises.readFile(args.path, "utf8");
+        contents = contents.replace("= makeLoader", "= /* @__PURE__ */ makeLoader");
+        return {
+          contents,
+          loader: loaders.getLoaderForFile(args.path),
+          resolveDir: path.dirname(args.path)
+        };
+      });
       build.onLoad({
         filter: suffixMatcher,
         namespace: "browser-route-module"
diff --git a/dist/config.js b/dist/config.js
index 4127eef2a81df8ea28f6c71f3f98d614dd31ef46..76e6a8d0df63498a8a690af476d66072ff198e94 100644
--- a/dist/config.js
+++ b/dist/config.js
@@ -243,7 +243,7 @@ async function readConfig(remixRoot, serverMode = serverModes.ServerMode.Product
     tsconfigPath = rootJsConfig;
   }
   if (tsconfigPath) {
-    writeConfigDefaults.writeConfigDefaults(tsconfigPath);
+    // writeConfigDefaults.writeConfigDefaults(tsconfigPath);
   }
   let future = {
     unstable_cssModules: ((_appConfig$future5 = appConfig.future) === null || _appConfig$future5 === void 0 ? void 0 : _appConfig$future5.unstable_cssModules) === true,