{
  "scripts": {
    "install-with-patch": "npm -C .patch run build && pnpm install",
    "clean": "rm -rf build",
    "dev": "npm run dev:prepare && concurrently -k 'npm:remix:dev' 'npm:tsc:dev' 'npm:tailwind:dev' -c 'bgBlue.bold,bgYellow.bold,bgMagenta.bold'",
    "dev:prepare": "npm run tailwind && npm run copy-assets",
    "dev:extra": "concurrently -k 'npm:vite'",
    "dev:all": "npm run dev:prepare && concurrently -k 'npm:dev' 'npm:tsc:dev' 'npm:tailwind:dev' 'npm:vite' -c 'bgBlue.bold,bgYellow.bold,bgMagenta.bold,bgGreen.bold'",
    "dev:e2e": "NODE_ENV=test npm run dev:prepare && NODE_ENV=test PORT=3001 npm run remix:dev",
    "copy-assets": "bash scripts/copy-assets.sh",
    "remix:dev": "remix dev",
    "remix:dev:coverage": "c8 -o coverage/e2e-server -r text -r html --exclude build --exclude packages --exclude-after-remap node_modules/.bin/remix dev",
    "tsc": "tsc",
    "tsc:dev": "tsc --noEmit --watch --preserveWatchOutput",
    "tailwind": "tailwindcss -o \"./build/tailwind/${NODE_ENV:-development}/index.css\"",
    "tailwind:dev": "npm run tailwind -- --watch",
    "vite": "vite",
    "prettier": "prettier -w .",
    "prettier:check": "prettier -c .",
    "prettier:diff": "prettier -w --ignore-unknown --no-error-on-unmatched-pattern $(npm run -s diff)",
    "eslint": "eslint . --ext .js,.jsx,.ts,.tsx --fix",
    "eslint:check": "eslint . --ext .js,.jsx,.ts,.tsx",
    "eslint:diff": "eslint --ext .js,.jsx,.ts,.tsx --fix --no-error-on-unmatched-pattern $(npm run -s diff | grep -P '\\.(jsx?|tsx?)$')",
    "lint": "npm run prettier && npm run eslint",
    "lint:check": "npm run prettier:check && npm run eslint:check",
    "lint:diff": "npm run prettier:diff && npm run eslint:diff",
    "test": "NODE_ENV=test vitest --run",
    "test:watch": "NODE_ENV=test vitest",
    "test:coverage": "NODE_ENV=test vitest --run --coverage",
    "test-e2e": "NODE_ENV=test playwright test",
    "test-e2e:debug": "NODE_ENV=test PWDEBUG=1 playwright test",
    "test-e2e:headed": "NODE_ENV=test E2E_HEADED=1 playwright test",
    "test-e2e:coverage": "bash scripts/test-e2e-coverage.sh",
    "dump-schema": "echo \"// auto-generated by 'npm run dump-schema'\nexport default $(npm run -s cli -- db:schema --json) as const\" > app/db/schema.ts",
    "netlify:build": "bash scripts/netlify.sh",
    "netlify:build:deploy:staging": "APP_DEFINE_STAGING=1 npm run netlify:build && netlify deploy",
    "netlify:build:deploy:production": "npm run netlify:build && netlify deploy --prod",
    "cli": "node --require esbuild-register app/misc/cli.ts",
    "cli:production": "eval $(bash .env.production.sh) && node --require esbuild-register app/misc/cli.ts",
    "console": "node --experimental-repl-await -r esbuild-register -r ./app/misc/console.ts",
    "console:staging": "eval $(bash .env.staging.sh) && npm run console",
    "knex:staging": "eval $(bash .env.staging.sh) && knex",
    "knex:production": "eval $(bash .env.production.sh) && knex",
    "diff": "git diff --name-only HEAD && git ls-files --others --exclude-standard",
    "qrcode": "qrcode-terminal http://$(ip -o -4 address list wlan0 | awk '{print $4}' | cut -d / -f 1):3000"
  },
  "dependencies": {
    "@floating-ui/react-dom-interactions": "^0.0.15",
    "@headlessui/react": "^0.0.0-insiders.ab6310c",
    "@netlify/functions": "^0.10.0",
    "@remix-run/netlify": "^1.4.0",
    "@remix-run/node": "^1.4.0",
    "@remix-run/react": "^1.4.0",
    "@remix-run/server-runtime": "^1.4.0",
    "@types/bcryptjs": "^2.4.2",
    "bcryptjs": "^2.4.3",
    "fast-xml-parser": "^4.0.7",
    "knex": "^1.0.4",
    "lodash": "^4.17.21",
    "mysql2": "^2.3.3",
    "qs": "^6.10.3",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "react-feather": "^2.0.9",
    "react-query": "^3.34.18",
    "react-transition-group": "^4.4.2",
    "react-use": "^17.3.2",
    "superjson": "^1.8.1",
    "zod": "^3.14.3"
  },
  "devDependencies": {
    "@playwright/test": "^1.19.2",
    "@remix-run/dev": "file:./.patch/node_modules/@remix-run/dev",
    "@remix-run/serve": "file:./.patch/node_modules/@remix-run/serve",
    "@tailwindcss/line-clamp": "^0.3.1",
    "@types/fs-extra": "^9.0.13",
    "@types/lodash": "^4.14.179",
    "@types/node": "^14",
    "@types/qs": "^6.9.7",
    "@types/react": "^17.0.39",
    "@types/react-dom": "^17.0.11",
    "@types/react-transition-group": "^4.4.4",
    "@typescript-eslint/eslint-plugin": "^5.13.0",
    "@typescript-eslint/parser": "^5.13.0",
    "@vitejs/plugin-react": "^1.2.0",
    "autoprefixer": "^10.4.2",
    "c8": "^7.11.2",
    "cac": "^6.7.12",
    "concurrently": "^7.0.0",
    "daisyui": "^2.2.2",
    "esbuild": "^0.14.23",
    "esbuild-register": "^3.3.2",
    "eslint": "^8.10.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-import": "^2.25.4",
    "express": "^4.17.3",
    "fs-extra": "^10.1.0",
    "gh-pages": "^3.2.3",
    "happy-dom": "^2.50.0",
    "postcss": "^8.4.7",
    "prettier": "^2.5.1",
    "qrcode-terminal": "^0.12.0",
    "react-router-dom": "^6.2.2",
    "tailwindcss": "^3.0.23",
    "typescript": "4.5.5",
    "vite": "^2.8.6",
    "vitest": "^0.7.12"
  },
  "volta": {
    "node": "14.19.1"
  }
}
